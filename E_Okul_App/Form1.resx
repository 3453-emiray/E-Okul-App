<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        nHiU+rHH/h+fY7aD2fkdyAAAAABJRU5ErkJggg==
</value>
  </data>
  <data name="pictureBox2.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAADAAAAAwCAYAAABXAvmHAAAABGdBTUEAALGPC/xhBQAAAAlwSFlzAAAL
        EAAACxABrSO9dQAAA0tJREFUaEPtmF1IU2EcxpUWEUGB1E1RVHRRFHURQZHBsCkzN6dL82NT07P8wj5M
        8jNtQ20KWUZoYEUGgdFFI9DtJkgp6qLrusgMyfKiiEQTKrJ/5z17t52d/eV86NkGngd+N3v9v8/z7HzO
        BE2aNK0ATVxOgniBRpInbKNYQSPJU3C4vytmrMwC4DWZwWt+/m84AwhjHhtYH1xCDdRGdgE2/FXwmQGj
        51FlhIESic3y95dVAHyZmVhwPtmD4UdCicRm+fvLLGAeFQYWMuqxhxmojbwCXtMcFprP3IgFNVKLZS8w
        M5KFGqmFvAI+0xgWms+zJ0VhBmqIv7/MAmarMLCQ9PsNYQZqiL+/rAJE7P2/BwtOcA1Vh20eDWQXIAJv
        RnbgQbYwfII7bYyDjaiB2igqEFBwGNk4WsgqcLywdGdqAeO89dDz4e2XmYXJH39ganYB3n/9Cd1DHthd
        VwfrrrWjRouhu+2G9iWcelILJBoKmDZDoeN3aqEDMk5Xwat3k1x4wpvxaTCX1gBZM9gcXJHVNztRQz7b
        Blzwgn2PItcPti4FSQXYYC4Sjk9RbQuMf5uHj99/QVm9K2yNoC+ugK2tTZDYF2m6ocsJxpoq+OyxBm8A
        wr+RimiBNDuzi/3m/woDElp7B6C9fzDicz5HHNWQ5G7jzBJZdjQ1QJrdv9bRZOfCz3qVP/xEC7BGbn4g
        pRw4dx4OVp+N+Pxerx323vUXVIJoAUOB46XQdLlIY6+XPY1L+x0h5QhMCI2lsO/CRUi1nUHXCPqSctjY
        qfybDyDhCDDzWAAxyObru51wqNJ/d+JDTqU1vR0RYZQg5QhEBJBC0KTPDZudzdzFrC+pgO3NjdzFzA+x
        FNQpwJ46mJkaqFJAX1yOmqmBKgVMp/Kg4ZguuiTrpuqPrkqnsUPCAoqRddKCm6hMfbLuE40dEhZQjByr
        ETWIBjR2SFhAMfItenTzaEBjh4QFFIN9el+n47HX6zs5kMeUoUEXg334tdDx2Iu8Lc49tcCNKzY0LAb7
        9lpJx2OvwPs6AQuLw+TS8djL/59o07SsAvmOFDoeHwKvcRP4TI/RsAgp+cx+OhpfwsJipBRXbKEj8SUs
        LMbh3Nq1dESTJk2alCgh4T8zB3kkZNhzUgAAAABJRU5ErkJggg==
</value>
  </data>
</root>